#!/usr/bin/env python

import sys
import argparse
from torque_accounting import parser

global printfmt
printfmt = "%30s %10s %5s %19s   %19s   %19s   %12s   %12s"



def print_job(name,job):
    try:
        user=job['user']
        queuet=job['events']['Q']
        start=job['events']['S']
        endt=job['events']['E']
        wait_time=job['wait_time']
        run_time=job['run_time']
        nodect=job['Resource_List.nodect']
        print printfmt % (name,user,nodect,queuet,start,endt,wait_time,run_time)
    except KeyError:
        pass

def filter_by_user(username,jobs):
    ujobs={}
    for j in jobs:
        try:
            if jobs[j]['user']==username:
                ujobs[j]=jobs[j]
        except KeyError:
            pass
    return ujobs

def print_nodes(job):
    try:
        print "%s\n" % (job['exec_host'])
    except KeyError:
        print "This job has no exec_host information!"

def print_header():
    print printfmt % ("Job Name","Username","Nodes", "Queue Time","Start Time","End Time","Wait Time","Run Time")
    

################################# Main ##################################################

ap = argparse.ArgumentParser()
ap.add_argument("--username","-u",dest="username",action="store",required=False,help="Show only jobs for this username")
ap.add_argument("--print-nodes","-n",dest="nodes",action="store_true",required=False,default=False,help="Print full node list used for each job")
ap.add_argument("--files","-f",dest="files",nargs='+',action="store",required=True,help="Use the accounting records in these files")

args=ap.parse_args()

if not args.username is None:
    jobs=filter_by_user(args.username,parser.parse_files(args.files))
else:
    jobs=parser.parse_files(args.files)

print_header()
for j in jobs:
    print_job(j,jobs[j])
    if args.nodes:
        print_nodes(jobs[j])

